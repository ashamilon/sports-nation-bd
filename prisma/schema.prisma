generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Banner {
  id          String    @id
  title       String
  description String?
  image       String
  link        String?
  position    String
  priority    Int       @default(0)
  isActive    Boolean   @default(true)
  startsAt    DateTime?
  expiresAt   DateTime?
  metadata    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
}

model BlogPost {
  id              String    @id
  title           String
  slug            String    @unique
  content         String
  excerpt         String?
  featuredImage   String?
  metaTitle       String?
  metaDescription String?
  metaKeywords    String?
  isPublished     Boolean   @default(false)
  publishedAt     DateTime?
  authorId        String?
  category        String?
  tags            String?
  viewCount       Int       @default(0)
  isFeatured      Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime
  User            User?     @relation(fields: [authorId], references: [id])
}

model Cart {
  id        String     @id @default(cuid())
  userId    String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime
  CartItem  CartItem[]
}

model CartItem {
  id             String          @id @default(cuid())
  cartId         String
  productId      String
  variantId      String?
  quantity       Int
  customOptions  String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime
  Cart           Cart            @relation(fields: [cartId], references: [id], onDelete: Cascade)
  Product        Product         @relation(fields: [productId], references: [id])
  ProductVariant ProductVariant? @relation(fields: [variantId], references: [id])

  @@unique([cartId, productId, variantId])
}

model Category {
  id             String     @id
  name           String
  slug           String     @unique
  description    String?
  image          String?
  parentId       String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
  Category       Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  other_Category Category[] @relation("CategoryToCategory")
  Product        Product[]
}

model Collection {
  id                         String                      @id
  name                       String
  slug                       String                      @unique
  description                String?
  image                      String?
  parentId                   String?
  isActive                   Boolean                     @default(true)
  isFeatured                 Boolean                     @default(false)
  sortOrder                  Int                         @default(0)
  metadata                   String?
  createdAt                  DateTime                    @default(now())
  updatedAt                  DateTime
  carouselOrder              Int?
  isInCarousel               Boolean                     @default(false)
  Collection                 Collection?                 @relation("CollectionToCollection", fields: [parentId], references: [id])
  other_Collection           Collection[]                @relation("CollectionToCollection")
  CollectionProduct          CollectionProduct[]
  HomepageCollectionSettings HomepageCollectionSettings?
}

model CollectionProduct {
  id           String     @id @default(cuid())
  collectionId String
  productId    String
  sortOrder    Int        @default(0)
  isFeatured   Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  Product      Product    @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([collectionId, productId])
}

model ContactForm {
  id          String    @id
  name        String
  email       String
  phone       String?
  subject     String
  message     String
  status      String    @default("new")
  priority    String    @default("normal")
  assignedTo  String?
  response    String?
  respondedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  User        User?     @relation(fields: [assignedTo], references: [id])
}

model CountdownTimer {
  id          String   @id
  title       String
  description String?
  targetDate  DateTime @default(now())
  type        String   @default("offer")
  targetId    String?
  isActive    Boolean  @default(true)
  position    String   @default("home")
  priority    Int      @default(0)
  metadata    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model Coupon {
  id              String    @id
  code            String    @unique
  description     String?
  type            String
  value           Float
  minimumAmount   Float?
  maximumDiscount Float?
  usageLimit      Int?
  usedCount       Int       @default(0)
  isActive        Boolean   @default(true)
  startsAt        DateTime?
  expiresAt       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime
}

model FAQ {
  id        String   @id
  question  String
  answer    String
  category  String   @default("general")
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model HomepageSettings {
  id          String   @id
  sectionKey  String   @unique
  sectionName String
  isVisible   Boolean  @default(true)
  sortOrder   Int      @default(0)
  metadata    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model HomepageCollectionSettings {
  id           String     @id @default(cuid())
  collectionId String     @unique
  isVisible    Boolean    @default(true)
  sortOrder    Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
}

model ExclusiveProductSettings {
  id        String   @id @default(cuid())
  productId String   @unique
  isVisible Boolean  @default(true)
  sortOrder Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model LoyaltyHistory {
  id          String   @id
  userId      String
  fromLevel   String
  toLevel     String
  reason      String
  ordersCount Int
  periodStart DateTime
  periodEnd   DateTime
  totalSpent  Float
  createdAt   DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model OTP {
  id         String   @id @default(cuid())
  identifier String   @unique
  code       String
  type       String
  attempts   Int      @default(0)
  isVerified Boolean  @default(false)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Media {
  id           String   @id
  filename     String
  originalName String
  mimeType     String
  size         Int
  url          String
  alt          String?
  caption      String?
  category     String   @default("general")
  tags         String?
  isActive     Boolean  @default(true)
  uploadedBy   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  User         User?    @relation(fields: [uploadedBy], references: [id])
}

model MenuConfig {
  id          String   @id
  menuType    String
  title       String
  collections String
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  metadata    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model Navigation {
  id               String       @id
  title            String
  url              String
  parentId         String?
  order            Int          @default(0)
  isActive         Boolean      @default(true)
  isExternal       Boolean      @default(false)
  target           String       @default("_self")
  icon             String?
  metadata         String?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime
  Navigation       Navigation?  @relation("NavigationToNavigation", fields: [parentId], references: [id])
  other_Navigation Navigation[] @relation("NavigationToNavigation")
}

model Newsletter {
  id             String    @id
  email          String    @unique
  firstName      String?
  lastName       String?
  isActive       Boolean   @default(true)
  subscribedAt   DateTime  @default(now())
  unsubscribedAt DateTime?
  source         String?
  tags           String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
}

model Offer {
  id               String    @id
  title            String
  description      String?
  type             String
  value            Float
  code             String?
  minimumAmount    Float?
  maximumDiscount  Float?
  usageLimit       Int?
  usedCount        Int       @default(0)
  isActive         Boolean   @default(true)
  startsAt         DateTime?
  expiresAt        DateTime?
  targetProducts   String?
  targetCategories String?
  metadata         String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
}

model Order {
  id                String           @id @default(cuid())
  orderNumber       String           @unique
  userId            String
  status            String           @default("pending")
  paymentStatus     String           @default("pending")
  paymentMethod     String?
  paymentIntentId   String?
  transactionId     String?
  subtotal          Float
  shippingCost      Float            @default(0)
  tipAmount         Float?           @default(0)
  total             Float
  currency          String           @default("BDT")
  customerLocation  String?
  shippingAddress   String
  billingAddress    String?
  trackingNumber    String?
  courierService    String?
  courierTrackingId String?
  notes             String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now()) @updatedAt
  User              User             @relation(fields: [userId], references: [id])
  OrderItem         OrderItem[]
  Payment           Payment[]
  TrackingUpdate    TrackingUpdate[]
}

model OrderItem {
  id               String          @id @default(cuid())
  orderId          String
  productId        String
  productVariantId String?
  quantity         Int
  price            Float
  customOptions    String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt
  Order            Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product          Product         @relation(fields: [productId], references: [id])
  ProductVariant   ProductVariant? @relation(fields: [productVariantId], references: [id])
}

model Page {
  id              String        @id
  title           String
  slug            String        @unique
  content         String
  excerpt         String?
  metaTitle       String?
  metaDescription String?
  metaKeywords    String?
  template        String        @default("default")
  isPublished     Boolean       @default(false)
  publishedAt     DateTime?
  authorId        String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime
  User            User?         @relation(fields: [authorId], references: [id])
  PageSection     PageSection[]
}

model PageSection {
  id        String   @id
  pageId    String
  title     String?
  content   String
  type      String   @default("text")
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  metadata  String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  Page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
}

model Payment {
  id              String   @id @default(cuid())
  orderId         String
  amount          Float
  currency        String   @default("BDT")
  status          String   @default("pending")
  paymentMethod   String
  transactionId   String?
  paymentIntentId String?
  metadata        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
  Order           Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Product {
  id                       String                    @id @default(cuid())
  name                     String
  slug                     String                    @unique
  description              String
  price                    Float
  comparePrice             Float?
  sku                      String                    @unique
  stock                    Int                       @default(0)
  images                   String[]
  isActive                 Boolean                   @default(true)
  isFeatured               Boolean                   @default(false)
  weight                   Float?
  dimensions               String?
  categoryId               String
  allowNameNumber          Boolean                   @default(false)
  nameNumberPrice          Float?                    @default(250)
  selectedBadges           String?
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @updatedAt
  CartItem                 CartItem[]
  CollectionProduct        CollectionProduct[]
  ExclusiveProductSettings ExclusiveProductSettings?
  OrderItem                OrderItem[]
  Category                 Category                  @relation(fields: [categoryId], references: [id])
  ProductVariant           ProductVariant[]
  Review                   Review[]
  WishlistItem             WishlistItem[]
  product_badges           product_badges[]
}

model ProductVariant {
  id           String         @id @default(cuid())
  name         String?
  value        String?
  price        Float?
  stock        Int            @default(0)
  productId    String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  fabricType   String?
  tracksuitType String?
  sizes        String?
  CartItem     CartItem[]
  OrderItem    OrderItem[]
  Product      Product        @relation(fields: [productId], references: [id], onDelete: Cascade)
  WishlistItem WishlistItem[]
}

model Review {
  id               String    @id
  userId           String
  productId        String
  rating           Int
  comment          String?
  isVerified       Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
  isApproved       Boolean   @default(true)
  isModerated      Boolean   @default(false)
  moderatedAt      DateTime?
  moderatedBy      String?
  moderationReason String?
  Moderator        User?     @relation("ReviewModerator", fields: [moderatedBy], references: [id])
  Product          Product   @relation(fields: [productId], references: [id])
  User             User      @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
}

model SEO {
  id                 String   @id
  page               String   @unique
  title              String?
  description        String?
  keywords           String?
  ogTitle            String?
  ogDescription      String?
  ogImage            String?
  twitterTitle       String?
  twitterDescription String?
  twitterImage       String?
  canonical          String?
  robots             String?
  schema             String?
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SiteContent {
  id        String   @id
  key       String   @unique
  title     String?
  content   String   @default("")
  type      String   @default("text")
  category  String   @default("general")
  isActive  Boolean  @default(true)
  metadata  String?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Testimonial {
  id         String   @id
  name       String
  email      String?
  company    String?
  position   String?
  content    String
  rating     Int      @default(5)
  avatar     String?
  isActive   Boolean  @default(true)
  isFeatured Boolean  @default(false)
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime
}

model TrackingUpdate {
  id          String   @id
  orderId     String
  status      String
  location    String?
  description String?
  timestamp   DateTime @default(now())
  courierData String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  Order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model User {
  id                      String             @id @default(cuid())
  name                    String?
  email                   String             @unique
  emailVerified           DateTime?
  image                   String?
  role                    String             @default("customer")
  phone                   String?
  password                String?
  address                 String?
  city                    String?
  country                 String?
  postalCode              String?
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
  loyaltyLevel            String             @default("bronze")
  loyaltyPoints           Int                @default(0)
  totalOrders             Int                @default(0)
  totalSpent              Float              @default(0)
  currentPeriodOrders     Int                @default(0)
  currentPeriodStart      DateTime?
  lastOrderDate           DateTime?
  firstOrderDiscountUsed  Boolean            @default(false)
  platinumDiscountUsed    DateTime?
  isEligibleForLoyalty    Boolean            @default(true)
  notificationPreferences Json?              @default("{\"sms\": true, \"push\": true, \"email\": true}")
  privacySettings         Json?              @default("{\"showEmail\": false, \"showPhone\": false, \"profileVisibility\": \"private\"}")
  Account                 Account[]
  BlogPost                BlogPost[]
  ContactForm             ContactForm[]
  behaviors               CustomerBehavior[]
  LoyaltyHistory          LoyaltyHistory[]
  Media                   Media[]
  Order                   Order[]
  Page                    Page[]
  PathaoOrder             PathaoOrder[]
  ModeratedReviews        Review[]           @relation("ReviewModerator")
  Review                  Review[]
  Session                 Session[]
  Wishlist                Wishlist?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Wishlist {
  id           String         @id
  userId       String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  User         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  WishlistItem WishlistItem[]
}

model WishlistItem {
  id             String          @id
  wishlistId     String
  productId      String
  variantId      String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime
  Product        Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  ProductVariant ProductVariant? @relation(fields: [variantId], references: [id])
  Wishlist       Wishlist        @relation(fields: [wishlistId], references: [id], onDelete: Cascade)

  @@unique([wishlistId, productId, variantId])
}

model badges {
  id             String           @id
  name           String
  description    String?
  image          String
  category       String
  price          Float            @default(150)
  isActive       Boolean          @default(true)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  product_badges product_badges[]
}

model product_badges {
  id        String  @id
  productId String
  badgeId   String
  badges    badges  @relation(fields: [badgeId], references: [id], onDelete: Cascade)
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, badgeId])
}

model Visitor {
  id        String             @id @default(cuid())
  sessionId String             @unique
  ipAddress String
  userAgent String
  country   String?
  city      String?
  region    String?
  timezone  String?
  isp       String?
  latitude  Float?
  longitude Float?
  page      String
  referrer  String?
  isActive  Boolean            @default(true)
  lastSeen  DateTime           @default(now())
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  behaviors CustomerBehavior[]
  pageViews PageView[]
}

model PageView {
  id        String   @id @default(cuid())
  visitorId String
  page      String
  title     String?
  referrer  String?
  duration  Int?
  createdAt DateTime @default(now())
  Visitor   Visitor  @relation(fields: [visitorId], references: [id], onDelete: Cascade)
}

model CustomerBehavior {
  id          String   @id @default(cuid())
  sessionId   String
  visitorId   String?
  userId      String?
  behavior    String
  productId   String?
  productName String?
  value       Float?
  metadata    String?
  isActive    Boolean  @default(true)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  Visitor     Visitor? @relation(fields: [visitorId], references: [id])

  @@unique([sessionId, behavior])
}

model CountdownBanner {
  id              String   @id @default(cuid())
  title           String
  subtitle        String?
  targetDate      DateTime
  backgroundImage String?
  isVisible       Boolean  @default(true)
  sortOrder       Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PathaoOrder {
  id                      String   @id @default(cuid())
  consignmentId           String   @unique
  merchantOrderId         String?
  storeId                 Int
  recipientName           String
  recipientPhone          String
  recipientSecondaryPhone String?
  recipientAddress        String
  recipientCity           Int?
  recipientZone           Int?
  recipientArea           Int?
  deliveryType            Int
  itemType                Int
  specialInstruction      String?
  itemQuantity            Int
  itemWeight              Float
  itemDescription         String?
  amountToCollect         Int
  orderStatus             String   @default("Pending")
  deliveryFee             Float?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  userId                  String?
  User                    User?    @relation(fields: [userId], references: [id])
}
